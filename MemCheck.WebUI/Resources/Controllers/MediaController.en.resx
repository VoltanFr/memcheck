<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="And" xml:space="preserve">
    <value>and</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>Are you sure you want to delete this image?</value>
  </data>
  <data name="BigSizeImageLabel_BigSize" xml:space="preserve">
    <value>Big size (bytes):</value>
  </data>
  <data name="BigSizeImageLabel_CloseButtonTitle" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="BigSizeImageLabel_CopiedToClipboardToastTitleOnFailure" xml:space="preserve">
    <value>Copy to clipboard failed</value>
  </data>
  <data name="BigSizeImageLabel_CopiedToClipboardToastTitleOnSuccess" xml:space="preserve">
    <value>Copy to clipboard OK</value>
  </data>
  <data name="BigSizeImageLabel_CopyToClipboard" xml:space="preserve">
    <value>Copy to clipboard</value>
  </data>
  <data name="BigSizeImageLabel_CurrentVersionCreatedOn" xml:space="preserve">
    <value>Current version date:</value>
  </data>
  <data name="BigSizeImageLabel_CurrentVersionDescription" xml:space="preserve">
    <value>Current version description:</value>
  </data>
  <data name="BigSizeImageLabel_Description" xml:space="preserve">
    <value>Description:</value>
  </data>
  <data name="BigSizeImageLabel_DownloadBiggestSize" xml:space="preserve">
    <value>Download in full size</value>
  </data>
  <data name="BigSizeImageLabel_EditButtonTitle" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="BigSizeImageLabel_InitialVersionCreatedBy" xml:space="preserve">
    <value>Uploaded by:</value>
  </data>
  <data name="BigSizeImageLabel_InitialVersionCreatedOn" xml:space="preserve">
    <value>Uploaded on:</value>
  </data>
  <data name="BigSizeImageLabel_MediumSize" xml:space="preserve">
    <value>Medium size (bytes):</value>
  </data>
  <data name="BigSizeImageLabel_Name" xml:space="preserve">
    <value>Image name:</value>
  </data>
  <data name="BigSizeImageLabel_NumberOfCards" xml:space="preserve">
    <value>Cards using this image:</value>
  </data>
  <data name="BigSizeImageLabel_originalImageContentType" xml:space="preserve">
    <value>Image type:</value>
  </data>
  <data name="BigSizeImageLabel_OriginalImageSize" xml:space="preserve">
    <value>Original size (bytes):</value>
  </data>
  <data name="BigSizeImageLabel_Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="BigSizeImageLabel_SmallSize" xml:space="preserve">
    <value>Small size (bytes):</value>
  </data>
  <data name="BigSizeImageLabel_Source" xml:space="preserve">
    <value>Source:</value>
  </data>
  <data name="BigSizeImageLabel_VersionHistoryButtonTitle" xml:space="preserve">
    <value>Version history</value>
  </data>
  <data name="CanNotUpdateMetadataBecauseSameAsOriginal" xml:space="preserve">
    <value>Can not update metadata because you did not change anything.</value>
  </data>
  <data name="CopyToClipboardToastTitleOnFailure" xml:space="preserve">
    <value>Copy to clipboard failed</value>
  </data>
  <data name="CopyToClipboardToastTitleOnSuccess" xml:space="preserve">
    <value>Copied to clipboard</value>
  </data>
  <data name="DescriptionNotSet" xml:space="preserve">
    <value>You need to set the description</value>
  </data>
  <data name="Failure" xml:space="preserve">
    <value>Failure</value>
  </data>
  <data name="FileNotSet" xml:space="preserve">
    <value>You need to select a valid image file</value>
  </data>
  <data name="ImageAlreadyExists" xml:space="preserve">
    <value>There is already an image with name</value>
  </data>
  <data name="ImageDescription" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="ImageName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Images" xml:space="preserve">
    <value>images</value>
  </data>
  <data name="ImageSavedWithName" xml:space="preserve">
    <value>Image saved with name</value>
  </data>
  <data name="ImageSource" xml:space="preserve">
    <value>Source</value>
  </data>
  <data name="ImageUsedInCardsPart1" xml:space="preserve">
    <value>Image used in</value>
  </data>
  <data name="ImageUsedInCardsPart2" xml:space="preserve">
    <value>cards.</value>
  </data>
  <data name="InitialImageVersionCreation" xml:space="preserve">
    <value>Initial version</value>
  </data>
  <data name="InvalidBlobLength" xml:space="preserve">
    <value>Invalid blob: length is</value>
  </data>
  <data name="InvalidDeletionDescriptionLength" xml:space="preserve">
    <value>Invalid deletion description length:</value>
  </data>
  <data name="InvalidDescriptionLength" xml:space="preserve">
    <value>Invalid description: length is</value>
  </data>
  <data name="InvalidImageContentType" xml:space="preserve">
    <value>Invalid content type</value>
  </data>
  <data name="InvalidNameLength" xml:space="preserve">
    <value>Invalid name: length is</value>
  </data>
  <data name="InvalidSourceLength" xml:space="preserve">
    <value>Invalid source information: length is</value>
  </data>
  <data name="LooksLikeABug" xml:space="preserve">
    <value>Ooops! Looks like there was a bug.</value>
  </data>
  <data name="MustBeBetween" xml:space="preserve">
    <value>, must be between</value>
  </data>
  <data name="NameNotSet" xml:space="preserve">
    <value>You need to set the name</value>
  </data>
  <data name="NeedLogin" xml:space="preserve">
    <value>This feature is available only when logged in</value>
  </data>
  <data name="RequestStatus" xml:space="preserve">
    <value>Request status</value>
  </data>
  <data name="SourceNotSet" xml:space="preserve">
    <value>You need to set the source information</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="SuccessfullyDeletedImage" xml:space="preserve">
    <value>Successfully deleted image</value>
  </data>
  <data name="SuccessfullyUpdatedImage" xml:space="preserve">
    <value>Image updated</value>
  </data>
  <data name="SureYouWantToDeletePart1" xml:space="preserve">
    <value>Sure you want to delete the image</value>
  </data>
  <data name="SureYouWantToDeletePart2" xml:space="preserve">
    <value>The last version was saved by</value>
  </data>
  <data name="SureYouWantToDeletePart3" xml:space="preserve">
    <value>on</value>
  </data>
  <data name="SvgImageCanNotBeLoaded" xml:space="preserve">
    <value>The imaging library failed to load this SVG image.</value>
  </data>
  <data name="UnknownImage" xml:space="preserve">
    <value>Unknown image</value>
  </data>
</root>