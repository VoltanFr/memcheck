@page
@using Microsoft.AspNetCore.Mvc.Localization
@using System.Web
@inject IViewLocalizer Localizer
@model LearnViewModel
@section head {
    <link href="@Url.Content("~/css/learn.css")" rel="stylesheet" type="text/css" asp-append-version="true" />
    <link href="@Url.Content("~/css/toolbarbutton.css")" rel="stylesheet" type="text/css" asp-append-version="true" />
    <link href="@Url.Content("~/css/rating.css")" rel="stylesheet" type="text/css" asp-append-version="true" />
    <link href="@Url.Content("~/css/tagbutton.css")" rel="stylesheet" type="text/css" asp-append-version="true" />
    <link href="@Url.Content("~/css/markdownrendering.css")" rel="stylesheet" type="text/css" asp-append-version="true" />
    <link href="@Url.Content("~/css/imageincard.css")" rel="stylesheet" type="text/css" asp-append-version="true" />
}
    @section scripts {
    <script type="module" src="~/js/CardRating.js" asp-append-version="true"></script>
    <script type="module" src="~/js/big-size-image.js" asp-append-version="true"></script>
    <script type="module" src="~/js/TagButton.js" asp-append-version="true"></script>
    <script>
        var localized = {};
        @foreach (var localizerEntry in Localizer.GetAllStrings())
        {
            @:localized.@localizerEntry.Name = "@Html.Raw(@HttpUtility.JavaScriptStringEncode(@localizerEntry.Value))";
        }
    </script>
    <script type="module" src="~/js/Learn/Learn.js" asp-append-version="true"></script>
}
    @{
    ViewData["Title"] = @Localizer["PageTitle"];
}
<input type="text" asp-for="LearnMode" id="LearnModeInput" hidden="hidden" />
<input type="text" asp-for="TagId" id="TagIdInput" hidden="hidden" />

<div id="LearnMainDiv" class="page-responsive-padding" v-cloak>
    <div id="WaitingOrLoading" v-if="!mountFinished || loading">
        <p class="wait-message">@Localizer["PleaseWaitForMount"]</p>
    </div>
    <div id="NormalOrFullScreenMode" v-if="mountFinished && !userQuitAttemptDisplay">
        <div id="FullScreenImage" v-if="currentFullScreenImage">
            <big-size-image v-bind:image="currentFullScreenImage" v-bind:labellocalizer="bigSizeImageLabelsLocalizer()" v-on:close="closeFullScreenImage()" />
        </div>
        <div id="NormalMode" v-else>
            <div id="Deck choice" class="table-responsive" v-if="offerDeckChoice()">
                <table class="table table-responsive" width="100%">
                    <tbody>
                        <tr id="Deck choice">
                            <th>@Localizer["Deck"]</th>
                            <td>
                                <select v-model="activeDeck"><option v-for="deck in userDecks" v-bind:value="deck">{{deck.description}}</option></select>
                                <button class="toolbar-button-circle toolbar-button" data-bs-toggle="tooltip" data-placement="top" title=@Localizer["DeckSettings"] @@click="openDeckSettingsPage()"><i class="fas fa-pen"></i></button>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div id="The card" class="card learning-card" v-if="currentCard">
                <div id="Lesson info" class="lesson-info-div">
                    <span class="lesson-mode-span">{{getLessonTitle()}}</span>
                    (@Localizer["BeforeInQueueCount"]{{remainingCardsInLesson}} <span v-if="remainingCardsInLesson > 1">@Localizer["AfterInQueueCountMoreThanOne"]</span><span v-else>@Localizer["AfterInQueueCountOne"]</span>)
                </div>
                <div id="Small buttons" class="small-buttons-div">
                    <ul class="small-buttons-ul">
                        <li id="Edit button" style="padding-right:5px" v-if="showEditButton()">
                            <a v-bind:href="editUrl()" class="toolbar-button-circle toolbar-button"><i class="fas fa-pen toolbar-button-content"></i></a>
                        </li>
                        <li id="Remove button" style="padding-right:5px" v-if="showRemoveButton()">
                            <van-button class="toolbar-button-circle toolbar-button" title=@Localizer["RemoveFromDeck"] @@click="removeCard"><i class="fas fa-trash-alt"></i></van-button>
                        </li>
                        <li id="Info button" style="padding-right:5px" title=@Localizer["Info"]>
                            <van-popover v-model:show="showInfoPopover" overlay close-on-click-outside close-on-click-overlay placement="right">
                                <span v-if="showLastLearnDate()">@Localizer["LastLearnDate"] {{dateTime(currentCard.lastLearnUtcTime)}}</span>
                                <hr class="menu-separation-line" v-if="showLastLearnDate()" />
                                <span v-if="showDateAddedInDeck()">@Localizer["DateAddedInDeck"] {{dateTime(currentCard.addToDeckUtcTime)}}</span>
                                <hr class="menu-separation-line" v-if="showDateAddedInDeck()" />
                                <div class="popover-section-title">@Localizer["CardVersion"]</div><br />
                                @Localizer["CreatedBy"] {{currentCard.owner}}<br />
                                @Localizer["OnDate"] {{dateTime(currentCard.lastChangeUtcTime)}}
                                <hr class="menu-separation-line" v-if="showNotificationRegistration()" />
                                <span v-if="showNotificationRegistration()">
                                    <a v-if="currentCard.registeredForNotifications" href="nothin" @@click.prevent="unregisterForNotif()">@Localizer["RegisteredForNotif"]</a>
                                    <a v-else href="nothin" @@click.prevent="registerForNotif()">@Localizer["NotRegisteredForNotif"]</a>
                                </span>
                                <template #reference>
                                    <van-button class="toolbar-button-circle toolbar-button"><i class="fas fa-info"></i></van-button>
                                </template>
                            </van-popover>
                        </li>
                        <li id="Visibility button" style="padding-right:5px" title=@Localizer["Visibility"]>
                            <van-popover v-model:show="showVisibilityPopover" overlay close-on-click-outside close-on-click-overlay>
                                @Localizer["Visibility"]: {{currentCard.visibleTo}}
                                <template #reference>
                                    <van-button class="toolbar-button-circle toolbar-button" v-if="currentCard.visibleToCount == 0"><i class="far fa-eye"></i></van-button>
                                    <van-button class="toolbar-button-circle toolbar-button" v-if="currentCard.visibleToCount == 1"><i class="far fa-eye-slash"></i></van-button>
                                    <van-button class="toolbar-button-circle toolbar-button" v-if="currentCard.visibleToCount > 1"><i class="fas fa-users"></i></van-button>
                                </template>
                            </van-popover>
                        </li>
                        <li id="Heap info" style="padding-right:5px" title=@Localizer["Heap"]>
                            <van-popover v-model:show="heapInfoPopover" overlay close-on-click-outside close-on-click-overlay>
                                @Localizer["CurrentlyInHeap"] {{currentCard.heap}}<br />
                                <span v-if="showTimesInNotLearnedHeap()">@Localizer["TimesInNotLearnedHeap"] {{currentCard.nbTimesInNotLearnedHeap}}<br /></span>
                                <span v-if="showBiggestHeapReached()">@Localizer["BiggestHeapReached"] {{currentCard.biggestHeapReached}}</span>
                                <hr class="menu-separation-line" v-if="showMoveToHeapMenu()" />
                                <van-popover v-model:show="showMoveToHeapMenuPopover" v-if="showMoveToHeapMenu()" overlay close-on-click-outside close-on-click-overlay>
                                    <van-button class="toolbar-button dropdown-item" v-for="targetHeap in currentCard.moveToHeapTargets" @@click="moveToHeap(targetHeap)">
                                        <span v-if="targetHeap.heapId < currentCard.heapId"><i class="fas fa-angle-left"></i></span><span v-else><i class="fas fa-angle-right"></i></span>
                                        {{targetHeap.heapName}}
                                    </van-button>
                                    <template #reference>
                                        <van-button class="toolbar-button">@Localizer["MoveToHeap"]</van-button>
                                    </template>
                                </van-popover>
                                <template #reference>
                                    <van-button class="toolbar-button"><i class="fas fa-layer-group"></i> {{currentCard.heap}}</van-button>
                                </template>
                            </van-popover>
                        </li>
                        <li id="Rating">
                            <card-rating v-model="currentCard.currentUserRating" v-bind:average="currentCard.averageRating" v-bind:countinaverage="currentCard.countOfUserRatings" v-bind:readonly="showRatingReadonly()" v-on:update:model-value="onRatingChange"
                                         yourratingstr='@Localizer["YourRating"]' averagestr='@Localizer["Average"]' usersstr='@Localizer["Users"]' userstr='@Localizer["User"]' noevaluationstr='@Localizer["NoEvaluation"]' />
                        </li>
                        <li id="Last learn date" v-if="rehearsing()" class="ms-auto" data-bs-toggle="tooltip" data-placement="top" v-bind:title="'@Localizer["LastLearnDate"] ' + dateTimeWithTime(currentCard.lastLearnUtcTime)">
                            <i class="fas fa-clock"></i> {{dateTime(currentCard.lastLearnUtcTime)}}
                        </li>
                    </ul>
                </div>
                <div id="Front side" class="memcheck-input-div card-side-div" v-if="currentCard">
                    <div class="learning-card-header">
                        <p>@Localizer["FrontSide"]</p>
                    </div>
                    <div class="markdown-render markdown-body">
                        <span v-html="currentCardFrontSide()"></span>
                    </div>
                    <div class="learning-card-body-image-div" v-for="image in currentCard.images">
                        <a href="#" @@click="showImageFull(image)" v-if="image.cardSide==1"><img class="imageincard" :src="image.blob" /></a>
                    </div>
                    <div v-if="!backSideVisible" class="learning-card-footer">
                        <button class="btn btn-success btn-md" @@click="showBackSide">@Localizer["ShowBack"]</button>
                    </div>
                </div>
                <div id="Back side" v-if="currentCard && backSideVisible" class="memcheck-input-div card-side-div">
                    <div class="learning-card-header">
                        <p>@Localizer["BackSide"]</p>
                    </div>
                    <div class="markdown-render markdown-body">
                        <span v-html="currentCardBackSide()"></span>
                    </div>
                    <div class="learning-card-body-image-div" v-for="image in currentCard.images">
                        <a href="#" @@click="showImageFull(image)" v-if="image.cardSide==2"><img class="imageincard" :src="image.blob" /></a>
                    </div>
                </div>
                <div id="Knew Forgot" v-if="backSideVisible" class="memcheck-bottom-button-div">
                    <ul class="nav small">
                        <li><button class="btn btn-success btn-md" @@click="knew">@Localizer["Knew"]</button></li>
                        <li class="ms-auto"><button class="btn btn-danger btn-md" @@click="forgot"><span v-if="learnMode == 2">@Localizer["DidNotKnow"]</span><span v-else>@Localizer["Forgot"]</span></button></li>
                    </ul>
                </div>
                <div id="Additional info" v-if="currentCard && backSideVisible && currentCardHasAdditionalSide()" class="memcheck-input-div card-side-div">
                    <div class="learning-card-header">
                        <p>@Localizer["AdditionalInfo"]</p>
                    </div>
                    <div class="markdown-render markdown-body">
                        <span v-html="currentCardAdditionalInfo()"></span>
                    </div>
                    <div class="learning-card-body-image-div" v-for="image in currentCard.images">
                        <a href="#" @@click="showImageFull(image)" v-if="image.cardSide==3"><img class="imageincard" :src="image.blob" /></a>
                    </div>
                </div>
                <div id="References" v-if="currentCard && backSideVisible && currentCardHasReferences()" class="memcheck-input-div card-side-div">
                    <details>
                        <summary class="learning-card-header">@Localizer["References"]</summary>
                        <div class="markdown-render markdown-body">
                            <span v-html="currentCardReferences()"></span>
                        </div>
                    </details>
                </div>
                <div id="Tags" v-if="currentCard.tags.length > 0" class="learning-card-tags">
                    <tag-button v-for="tag in currentCard.tags" v-bind:name="tag"></tag-button>
                </div>
            </div>
            <div id="No more card" class="card border-primary" v-if="!currentCard">
                <p class="wait-message" v-if="currentImageLoadingPromise">@Localizer["PleaseWaitForImageLoad"]</p>
                <div v-else>
                    <p class="wait-message" v-if="preventQuittingPage()">@Localizer["PleaseWaitSavingData"]</p>
                    <div v-else>
                        <p class="wait-message">@Localizer["NoMoreCardTo"] <span v-if="learnMode == 2">@Localizer["Learn"]</span><span v-else>@Localizer["Repeat"]</span></p>
                        <a href="/" class="wait-message">@Localizer["BackToHomePage"]</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="UserQuitAttemptDisplayMode" v-if="userQuitAttemptDisplay">
        <p>@Localizer["ExplainMoveOperationsBeforeIcon"] <i class="fas fa-save"></i> @Localizer["ExplainMoveOperationsAfterIcon"]</p>
        <button class="btn btn-success toolbar-button" @@click="userQuitAttemptDisplay = false">@Localizer["ExplainMoveOperationsOkButton"]</button>
    </div>
    <div id="Processing info">
        <p v-if="preventQuittingPage()"><i class="fas fa-save"></i></p>
    </div>
    <div id="DebugInfo" class="debug-info-div collapse" v-if="showDebugInfo()">
        <ul>
            <li v-if="!downloadedCards">downloadedCards is null</li>
            <li v-if="downloadedCards">downloadedCards.length: {{downloadedCards.length}}</li>
            <li>lastDownloadIsEmpty: {{lastDownloadIsEmpty}}</li>
            <li v-if="!cardDownloadOperation">No cardDownloadOperation</li>
            <li v-if="cardDownloadOperation">cardDownloadOperation: {{cardDownloadOperation}}</li>
            <li v-if="!currentCard">No currentCard</li>
            <li v-if="currentCard">currentCard.visibleToCount: {{currentCard.visibleToCount}}</li>
            <li v-if="currentCard">currentCard.heapId: {{currentCard.heapId}}</li>
            <li v-if="currentCard">currentCard.Last learn time: {{dateTimeWithTime(currentCard.lastLearnUtcTime)}}</li>
            <li>pendingMoveOperations.length: {{pendingMoveOperations.length}}</li>
            <li v-if="!currentMovePromise">currentMovePromise is null</li>
            <li v-if="currentMovePromise">currentMovePromise: {{currentMovePromise}}</li>
            <li v-if="additionalMoveDebugInfo">Move info: {{additionalMoveDebugInfo}}</li>
            <li v-if="!currentImageLoadingPromise">currentImageLoadingPromise is null</li>
            <li v-if="currentImageLoadingPromise">currentImageLoadingPromise: {{currentImageLoadingPromise}}</li>
            <li>pendingRatingOperations.length: {{pendingRatingOperations.length}}</li>
            <li v-if="!currentRatingPromise">currentRatingPromise is null</li>
            <li v-if="currentRatingPromise">currentRatingPromise: {{currentRatingPromise}}</li>
            <li v-if="additionalRatingDebugInfo">Rating info: {{additionalRatingDebugInfo}}</li>
        </ul>
    </div>
</div>
