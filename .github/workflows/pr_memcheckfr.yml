name: "MemCheck build and test"

on:
  pull_request:
    branches:
      - master

jobs:
  build-test:
    name: "MemCheck compilation and test"

    runs-on: windows-latest

    env:
      NETCORE_VERSION: "6.0"
      COMPIL_CONFIG: "Release"
      PUBLISH_FOLDER_PATH: "./Published"
      AZURE_WEBAPP_NAME: "memcheckfr"
      AZURE_FUNCTION_NAME: "memcheck-notifier"

    steps:
    - uses: actions/checkout@v3.1.0

    - name: "Tell environment variables"
      run: |
        echo "Several environment variables"
        echo "GITHUB_WORKFLOW: $env:GITHUB_WORKFLOW"
        echo "GITHUB_RUN_ID: $env:GITHUB_RUN_ID"
        echo "GITHUB_RUN_NUMBER: ${env:GITHUB_RUN_NUMBER}"
        echo "GITHUB_ACTOR: $env:GITHUB_ACTOR"
        echo "GITHUB_EVENT_NAME: $env:GITHUB_EVENT_NAME"
        echo "GITHUB_EVENT_PATH: $env:GITHUB_EVENT_PATH"
        echo "GITHUB_WORKSPACE: $env:GITHUB_WORKSPACE"
        echo "GITHUB_SHA: $env:GITHUB_SHA"
        echo "GITHUB_REF: $env:GITHUB_REF"
        echo "NETCORE_VERSION: $env:NETCORE_VERSION"

    - name: "Set up .NET Core on machine (version ${{env.NETCORE_VERSION}})"
      uses: actions/setup-dotnet@v2.1.0
      with:
        dotnet-version: ${{env.NETCORE_VERSION}}

    - name: "Clean with dotnet"
      run: dotnet clean --configuration ${{env.COMPIL_CONFIG}}

    - name: "Restore NuGet packages"
      run: dotnet restore

    - name: "Build the root sln with dotnet"
      run: dotnet build --no-restore --configuration ${{env.COMPIL_CONFIG}} --version-suffix "$env:GITHUB_RUN_NUMBER"

    - name: "Run unit tests"
      run: dotnet test --configuration ${{env.COMPIL_CONFIG}} --filter TestCategory!=IntegrationTests

    - name: "Install JavaScript modules"
      run: yarn

    - name: Run ESLint
      run: eslint MemCheck.WebUI/wwwroot/js

    - name: "Publish: prepare the projects for deployment"
      run: dotnet publish --no-build --configuration ${{env.COMPIL_CONFIG}} -o ${{env.PUBLISH_FOLDER_PATH}} --no-self-contained MemCheck.WebUI

    - name: "Telling size of publish folder"
      run: du -sh ${{env.PUBLISH_FOLDER_PATH}}
